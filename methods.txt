#20220225
fa作为ref，bam作为input，可以有多个bam
读fa，生成Contig
获取每个bam的测序技术（NGS或SMRT）
获取bam的统计信息
生成VCF Header
标记需要进行call的contig，并跳过不call的
分支持变异类型统计Signature，目前2种，0：DEL，1：DUP
    使用htslib读bam record，可多线程
    对每个br，从CIGAR获取DEL,获取时使用DelMinMaxMergeDis特性，效果更好。
    提取Clip的DEL和DUPSignature。
    如果是NGS，提取DRP Signatures。
对每种Signature进行排序和去重
对每种Signature进行聚类
    目前聚类算法叫brotherhood（自己取的名字），是类似NanoSV里的方法。
对聚类获得的每个Cluster进行筛选和输出
    筛选主要是看支持的template数量，然后有个SV大小范围
    分成多层，通过分析相关关系，加上了Length的SD的筛选标准。
    目前用的cuteSV的方法，对Cluster里每个Signature的POS和LENGTH求平均作为SV的相应属性

Clustering：
    cuteSV：
        对同类Signatures排序，从第一个开始，如果这一个起始和类里第一个的起始（最左边）差距在200以上，则以这个新建一个簇，否则加进去。如果簇的数量低于10个，丢弃。
        每个簇中同read的只保留最长的一个Signature。（这一步去掉效果更好）
        将每个簇内根据Length排序，如果这一个Signature比上一个的Length长超过平均长度的一半则新建一个簇。
    kled original：
        对同类Signature排序，从第一个没加入任何类的Signature开始，如果这一个和类里全部的距离都不超过MaxDis则加进去，否则，如果距离加上精度补偿后大于最大距离则结束这个类，新建一个，否则看下一个没加入任何类的Signature。
    brotherlink(NanoSV like):
        簇命名为Brotherhood，每个Signature都单独放到一个Brotherhood，然后看每两个兄弟会中是否有Signature有brother关系，有就合并兄弟会。直到兄弟会数量不变。

可以从打分提高precision出发提高f1，因为recall可以非常高